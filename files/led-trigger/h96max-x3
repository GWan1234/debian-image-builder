#!/bin/bash
# H96 MAX Vacuum Fluorescent Display

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

vfd_gpio_clk='0,64,0'
vfd_gpio_dat='0,63,0'
vfd_gpio_stb='0,0,0xFF'
vfd_chars='0,4,3,2,1'
vfd_dot_bits='0,1,3,2,4,5,6'
vfd_display_type='0x00,0x00,0x00,0x06'
functions='alarm usb play pause colon eth wifi'

if [[ `command -v vfdservice` ]]; then
	modprobe openvfd vfd_gpio_clk=${vfd_gpio_clk} \
	vfd_gpio_dat=${vfd_gpio_dat} \
	vfd_gpio_stb=${vfd_gpio_stb:-0,0,0xFF} \
	vfd_gpio0=${vfd_gpio0:-0,0,0xFF} \
	vfd_gpio1=${vfd_gpio1:-0,0,0xFF} \
	vfd_gpio2=${vfd_gpio2:-0,0,0xFF} \
	vfd_gpio3=${vfd_gpio3:-0,0,0xFF} \
	vfd_gpio_protocol=${vfd_gpio_protocol:-0,0} \
	vfd_chars=${vfd_chars} vfd_dot_bits=${vfd_dot_bits} \
	vfd_display_type=${vfd_display_type} \
	vfd_show_boot=1
	sleep 3
	vfdservice &
	trap "killall vfdservice; rmmod openvfd; exit" 2 3 15
	if [[ -n "${functions}" ]]; then
		for func in ${functions}; do
		echo "${func}" > /sys/class/leds/openvfd/led_off 2>/dev/null
		done
	fi
	# check storage
	if [[ `ls /dev/sd*[!0-9]` ]] > /dev/null 2>&1; then
		:;
	else
        	sleep 1.90; echo "usb" > /sys/class/leds/openvfd/led_off
	fi
fi

BLUE_LED="/sys/class/leds/blue:status/trigger"
if [[ -f "$BLUE_LED" ]]; then echo "default-on" > $BLUE_LED; fi

exit 0
