#!/bin/bash

# ATF BINARY AND FIRMWARE
fw_dynamic (){ # place file.
if [[ -f "../${BOARD}-opensbi-${OPENSBI_TAG}/${OPENSBI_FIRMWARE}" ]]; then cp "../${BOARD}-opensbi-${OPENSBI_TAG}/${OPENSBI_FIRMWARE}" .; else report_opensbi_error; fi
}

# U-BOOT
spacemit_uboot_download (){
if [[ -d "${BOARD}-u-boot-${GIT_UBOOT_TAG}" ]]; then
	echo -en "${WHT}${BOARD}-u-boot-${GIT_UBOOT_TAG}${FIN} "
	echo -en "${PNK}[${FIN}${YLW}found${FIN}${PNK}]${FIN} "
	cd ${BOARD}-u-boot-${GIT_UBOOT_TAG}
	make clean
	echo -en "${PNK}[${FIN}${WHT}restoring${FIN}${PNK}]${FIN} "
	cd ..; cp -r ${BOARD}-u-boot-${GIT_UBOOT_TAG} u-boot
	# They edit this file to much so lets just remove it and add our own
	rm -f u-boot/board/spacemit/k1-x/k1-x.env
	echo_bdone
else
	echo -en "${WHT}${BOARD}-u-boot-${GIT_UBOOT_TAG}${FIN} "
	echo -en "${PNK}[${FIN}${WHT}cloning${FIN}${PNK}]${FIN} "
	git clone -q -c advice.detachedHead=false ${GIT_UBOOT_URL} 
	if [[ -d "${BOARD}-u-boot-${GIT_UBOOT_TAG}" ]]; then
		cd ${BOARD}-u-boot-${GIT_UBOOT_TAG}; make clean; cd ..; cp -r ${BOARD}-u-boot-${GIT_UBOOT_TAG} u-boot
		# They edit this file to much so lets just remove it and add our own
		rm -f u-boot/board/spacemit/k1-x/k1-x.env
		echo_bdone
	else
		echo -e "${PNK}[${FIN}${RED}failed${FIN}${PNK}]${FIN}"; exit 1
	fi
fi
}

uboot_output (){
if [[ -f "bootinfo_emmc.bin" ]] && [[ -f "u-boot.itb" ]] && [[ -f "fw_dynamic.itb" ]] && [[ -f "FSBL.bin" ]]; then
	mkdir -p ../../${OUTPUT}
	cp -f bootinfo_emmc.bin ../../${OUTPUT}/
	cp -f FSBL.bin ../../${OUTPUT}/
	cp -f fw_dynamic.itb ../../${OUTPUT}/fw_dynamic.bin
	cp -f u-boot.itb ../../${OUTPUT}/u-boot.bin
	uboot_packaging
	echo ""
else
	report_error
fi
}

spacemit_uboot_run (){
sources_dir
opensbi_firmware
uboot_run
uboot_output
}

spacemit_uboot_packaging (){
cp -f bootinfo_emmc.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
cp -f FSBL.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
cp -f fw_dynamic.itb ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/fw_dynamic.bin
cp -f u-boot.itb ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/u-boot.bin
#cp -f ../../files/boot/env_k1-x.txt ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
}

# STAGE1
flash_uboot (){
dd if=${OUTPUT}/bootinfo_emmc.bin of="${IMAGE_LOOP_DEV}" bs=512 conv=notrunc
dd if=${OUTPUT}/FSBL.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=1 conv=notrunc
dd if=${OUTPUT}/FSBL.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=512 conv=notrunc
dd if=${OUTPUT}/fw_dynamic.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=1280 conv=notrunc
dd if=${OUTPUT}/u-boot.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=2048 conv=notrunc
}

env_config (){
rm -f p1/env_k1-x.txt
cp -f files/boot/env_k1-x.txt p1/
if [[ "$P_VALUE" == "p1" ]]; then
	sed -i "s/^knl_name=.*/knl_name=boot\/Image.itb/" p1/env_k1-x.txt
	sed -i "s/^ramdisk_name=.*/ramdisk_name=boot\/initrd.gz/" p1/env_k1-x.txt
	sed -i "s/^dtb_dir=.*/dtb_dir=boot\/spacemit/" p1/env_k1-x.txt
fi
if [[ "$P_VALUE" == "p2" ]]; then
	sed -i "s/^knl_name=.*/knl_name=Image.itb/" p1/env_k1-x.txt
	sed -i "s/^ramdisk_name=.*/ramdisk_name=initrd.gz/" p1/env_k1-x.txt
	sed -i "s/^dtb_dir=.*/dtb_dir=spacemit/" p1/env_k1-x.txt
fi
sed -i "s/^mmc_rootfstype=.*/mmc_rootfstype=${FSTYPE}/" p1/env_k1-x.txt
sed -i "s/^partuuid=.*/partuuid=${ROOT_PARTUUID}/" p1/env_k1-x.txt
}

# STAGE2
bananapif3_vpu_firmware (){
git clone -q https://gitee.com/bianbu-linux/k1x-vpu-firmware.git
if [[ -d "k1x-vpu-firmware/lib/firmware/linlon-v52_v76-80-2" ]]; then
	mkdir -p /lib/firmware/linlon-v52_v76-80-2
	cp -fr k1x-vpu-firmware/lib/firmware/linlon-v52_v76-80-2/* /lib/firmware/linlon-v52_v76-80-2/
else
	echo -e "k1x-vpu-firmware: install failed!"
fi
rm -fdr k1x-vpu-firmware
}
