#!/bin/bash

# general firmware
install_firmware (){
ARIA2="aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0 --show-files=false"
echo ""
echo "Adding ${DEFAULT_MOTD} firmware ..."
sleep .50
mkdir -p /lib/firmware/brcm
cd ~
${ARIA2} https://github.com/armbian/firmware/archive/master.tar.gz
tar xf firmware-master.tar.gz
rm -f firmware-master/README.md
rm -fdr firmware-master/ath11k
cp -fr firmware-master/* /lib/firmware
rm -fdr firmware-master firmware-master.tar.gz master.tar.gz
if [[ -f "/lib/firmware/brcm/brcmfmac4356-sdio.txt" ]]; then
	ln -s /lib/firmware/brcm/brcmfmac4356-sdio.txt /lib/firmware/brcm/brcmfmac4356-sdio.friendlyarm,nanopc-t4.txt
fi
if [[ -f "/lib/firmware/brcm/brcmfmac4356-sdio.bin" ]]; then
	ln -s /lib/firmware/brcm/brcmfmac4356-sdio.bin /lib/firmware/brcm/brcmfmac4356-sdio.friendlyarm,nanopc-t4.bin
fi
mv fw-0a5c_21e8.hcd /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
cp /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
install -Dm644 UPDATE.mem /lib/firmware/renesas_usb_fw.mem
rm -f UPDATE.mem
git clone --depth=1 -q -b realtek https://github.com/pyavitz/firmware.git
rm -f firmware/README.md; cp -fr firmware/* /lib/firmware; rm -fdr firmware
if [[ "$FAMILY_EXT" == "ac2xx" ]]; then
	# AML TV BOXES
	git clone --depth=1 -q -b h96max-x3 https://github.com/pyavitz/firmware.git
	rm -f firmware/README.md; cp -fr firmware/* /lib/firmware; rm -fdr firmware
	git clone --depth=1 -q -b ath10k https://github.com/pyavitz/firmware.git
	cp -fr firmware/* /lib/firmware; rm -fdr firmware
fi
if [[ "$BOARD" =~ ^(bananapim2zero|bananapip2zero|nanopineoplus2)$ ]]; then
	git clone --depth=1 -q -b nanopi https://github.com/pyavitz/firmware.git
	rm -f firmware/README.md; cp -fr firmware/* /lib/firmware; rm -fdr firmware
fi
if [[ "$BOARD" == "cubietruck" ]]; then
	git clone --depth=1 -q -b cubietruck https://github.com/pyavitz/firmware.git
	rm -f firmware/README.md; cp -fr firmware/* /lib/firmware; rm -fdr firmware
fi
if [[ "$BOARD" == "radxazero" ]]; then
	git clone --depth=1 -q -b radxa https://github.com/pyavitz/firmware.git
	rm -f firmware/README.md; cp -fr firmware/* /lib/firmware; rm -fdr firmware
fi
if [[ -f "/lib/firmware/brcm/brcmfmac43430-sdio.bin" ]]; then
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.bin /lib/firmware/brcm/brcmfmac43430-sdio.friendlyarm,nanopi-neo-plus2.bin
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.bin /lib/firmware/brcm/brcmfmac43430-sdio.sinovoip,bpi-m2-zero.bin
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.bin /lib/firmware/brcm/brcmfmac43430-sdio.sinovoip,bpi-p2-zero.bin
fi
if [[ -f "/lib/firmware/brcm/brcmfmac43430-sdio.txt" ]]; then
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.txt /lib/firmware/brcm/brcmfmac43430-sdio.sinovoip,bpi-m2-zero.txt
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.txt /lib/firmware/brcm/brcmfmac43430-sdio.sinovoip,bpi-p2-zero.txt
fi
mkdir -p /lib/firmware/rtl_nic
wget -cq https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware.git/+archive/refs/heads/main/rtl_nic.tar.gz -P /lib/firmware/rtl_nic
if [[ -f "/lib/firmware/rtl_nic/rtl_nic.tar.gz" ]]; then
	tar xf /lib/firmware/rtl_nic/rtl_nic.tar.gz -C /lib/firmware/rtl_nic
	rm -f /lib/firmware/rtl_nic/rtl_nic.tar.gz
fi
if [[ "$BOARD" == "pinebookpro" ]]; then
	cd ~
	# wifi and bluetooth firmware
	wget -cq https://raw.githubusercontent.com/pyavitz/firmware/main/brcmfmac43456-sdio.txt
	wget -cq https://raw.githubusercontent.com/pyavitz/firmware/main/brcmfmac43456-sdio.bin
	wget -cq https://raw.githubusercontent.com/pyavitz/firmware/main/brcmfmac43456-sdio.clm_blob
	wget -cq https://raw.githubusercontent.com/pyavitz/firmware/main/BCM4345C5.hcd
	wget -cq https://raw.githubusercontent.com/pyavitz/firmware/main/BCM4345C0.hcd
	cp -f brcmfmac43456-sdio.txt brcmfmac43456-sdio.pine64,pinebook-pro.txt
	mv -f {brcmfmac43456-*,BCM4345C5.hcd,BCM4345C0.hcd} /lib/firmware/brcm/
fi
if [[ "$FAMILY" == "amlogic" ]]; then
	cd ~
	${ARIA2} https://github.com/LibreELEC/meson-firmware/archive/refs/heads/master.tar.gz
	tar xf meson-firmware-master.tar.gz
	cp -fr meson-firmware-master/meson/* /lib/firmware/meson
	rm -fdr meson-firmware-master*
	mkdir -p /lib/firmware/ene-ub6250
	cd /lib/firmware/ene-ub6250
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/ms_init.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/ms_rdwr.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/msp_rdwr.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/sd_init1.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/sd_init2.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/sd_rdwr.bin
	chown -R root:root /lib/firmware/ene-ub6250
	cd ~
fi
if [[ "$FAMILY_EXT" =~ ^(rk356x|rk3588)$ ]]; then
	cd ~
	mkdir -p /lib/firmware/bnx2
	wget -cq https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+archive/refs/heads/main/bnx2.tar.gz -P /lib/firmware/bnx2
	if [[ -f "/lib/firmware/bnx2/bnx2.tar.gz" ]]; then
		tar xf /lib/firmware/bnx2/bnx2.tar.gz -C /lib/firmware/bnx2
		rm -f /lib/firmware/bnx2/bnx2.tar.gz
	fi
	if [[ "$BOARD" == "khadasedge2" ]]; then
		git clone --depth=1 -q -b kedge2 https://github.com/pyavitz/firmware.git
		rm -f firmware/README.md; cp -fr firmware/* /lib/firmware; rm -fdr firmware
	fi
fi
if [[ "$BOARD" == "indiedroid-nova" ]]; then
	cd ~
	git clone --depth=1 -q https://github.com/stvhay/rkwifibt
	# build the hci driver
	cd rkwifibt
	make -C realtek/rtk_hciattach
	# Install the firmware and utility
	mkdir -p /lib/firmware/rtl_bt
	cp -fr realtek/RTL8821CS/* /lib/firmware/rtl_bt/
	cp -f realtek/rtk_hciattach/rtk_hciattach /usr/bin/
	cp -f bt_load_rtk_firmware                /usr/bin/
	chmod +x /usr/bin/{rtk_hciattach,bt_load_rtk_firmware}
	cd ~
	rm -fdr rkwifibt
fi
cd /lib/firmware
if [[ ! -f "/lib/firmware/dvb-fe-xc4000-1.4.1.fw" ]]; then ${ARIA2} https://github.com/armbian/firmware/raw/master/dvb-fe-xc4000-1.4.1.fw; fi
if [[ ! -f "/lib/firmware/xc3028-v27.fw" ]]; then ${ARIA2} https://github.com/armbian/firmware/raw/master/xc3028-v27.fw; fi
if [[ ! -f "/lib/firmware/xc3028L-v36.fw" ]]; then ${ARIA2} https://github.com/armbian/firmware/raw/master/xc3028L-v36.fw; fi
if [[ ! -f "/lib/firmware/xc4000-1.4.fw" ]]; then ${ARIA2} https://github.com/armbian/firmware/raw/master/xc4000-1.4.fw; fi
if [[ ! -f "/lib/firmware/dvb-fe-xc4000-1.4.fw" ]]; then ln -s /lib/firmware/xc4000-1.4.fw /lib/firmware/dvb-fe-xc4000-1.4.fw; fi
cd ~
if [[ "$BOARD" == "bananapif3" ]]; then bananapif3_vpu_firmware; fi
echo ""
}

# regulatory db
wireless_regdb (){
echo ""
echo -e "Adding regulatory db ..."
if [[ "$DISTRO" == "ubuntu" ]]; then
	echo 'KERNEL=="regulatory*", ACTION=="change", SUBSYSTEM=="platform", RUN+="/sbin/crda"' > /etc/udev/rules.d/60-regdb.rules
fi
git clone --depth=1 https://kernel.googlesource.com/pub/scm/linux/kernel/git/sforshee/wireless-regdb
sleep .50
cd wireless-regdb
cp -f regulatory.db /lib/firmware/regulatory.db
cp -f regulatory.db.p7s /lib/firmware/regulatory.db.p7s
cd ~
rm -fdr wireless-regdb
}

# wireless conf files
realtek_conf (){
mkdir -p /etc/modprobe.d/
mkdir -p /usr/lib/NetworkManager/conf.d/
cat <<EOF > /etc/modprobe.d/realtek-wireless.conf
options 8821cu rtw_led_ctrl=1 rtw_vht_enable=1 rtw_power_mgnt=0 rtw_enusbss=0 rtw_switch_usb_mode=1
options rtw88_usb switch_usb_mode=1
EOF
if [[ "$BOARD" == "bananapim4zero" ]]; then
	cat <<EOF > /etc/modprobe.d/aliases-${BOARD}.conf
softdep rtw88_8821c post: ehci-hcd
softdep rtw88_8821cu post: ehci-hcd
softdep 8821cu post: ehci-hcd
EOF
fi
# Take Realtek wifi dongle out of Driver CDROM Mode
mkdir -p /etc/udev/rules.d
cat <<EOF > /etc/udev/rules.d/usb_modeswitch.rules
# Realtek Semiconductor Corp. RTL8188GU 802.11n WLAN Adapter
ATTR{idVendor}=="0bda", ATTR{idProduct}=="1a2b", RUN+="/usr/sbin/usb_modeswitch -K -v 0bda -p 1a2b"
EOF
}

router_udev_rules (){
mkdir -p /etc/udev/rules.d
if [[ "$BOARD" =~ ^(nanopir4s|nanopir4se|nanopir5c)$ ]]; then
	echo 'SUBSYSTEM=="leds", KERNEL=="green:wan", ACTION=="add", ATTR{trigger}="netdev", ATTR{device_name}="eth1", ATTR{link}="1" ATTR{rx}="1" ATTR{tx}="1"' > /etc/udev/rules.d/10-nanopi-led.rules
	echo 'SUBSYSTEM=="leds", KERNEL=="green:lan", ACTION=="add", ATTR{trigger}="netdev", ATTR{device_name}="eth0", ATTR{link}="1" ATTR{rx}="1" ATTR{tx}="1"' >> /etc/udev/rules.d/10-nanopi-led.rules
fi
if [[ "$BOARD" == "nanopir5s" ]]; then
	echo 'SUBSYSTEM=="leds", KERNEL=="green:wan", ACTION=="add", ATTR{trigger}="netdev", ATTR{device_name}="eth2", ATTR{link}="1" ATTR{rx}="1" ATTR{tx}="1"' > /etc/udev/rules.d/10-nanopi-led.rules
	echo 'SUBSYSTEM=="leds", KERNEL=="green:lan1", ACTION=="add", ATTR{trigger}="netdev", ATTR{device_name}="eth0", ATTR{link}="1" ATTR{rx}="1" ATTR{tx}="1"' >> /etc/udev/rules.d/10-nanopi-led.rules
	echo 'SUBSYSTEM=="leds", KERNEL=="green:lan2", ACTION=="add", ATTR{trigger}="netdev", ATTR{device_name}="eth1", ATTR{link}="1" ATTR{rx}="1" ATTR{tx}="1"' >> /etc/udev/rules.d/10-nanopi-led.rules
fi
}

router_ifupdown (){
if [[ "$BOARD" =~ ^(bananapif3|bananapim2s|ft20|orangepir1|nanopir1|nanopir4s|nanopir4se|nanopir5c|dfa|radxae25)$ ]]; then
	if [[ -f "/etc/network/interfaces" ]]; then
		sed -i 's/#allow-hotplug eth1/allow-hotplug eth1/g' /etc/network/interfaces
		sed -i 's/#iface eth1 inet dhcp/iface eth1 inet dhcp/g' /etc/network/interfaces
	fi
fi
if [[ "$BOARD" == "nanopir5s" ]]; then
	if [[ -f "/etc/network/interfaces" ]]; then
		sed -i 's/#allow-hotplug eth1/allow-hotplug eth1/g' /etc/network/interfaces
		sed -i 's/#iface eth1 inet dhcp/iface eth1 inet dhcp/g' /etc/network/interfaces
		sed -i 's/#allow-hotplug eth2/allow-hotplug eth2/g' /etc/network/interfaces
		sed -i 's/#iface eth2 inet dhcp/iface eth2 inet dhcp/g' /etc/network/interfaces
	fi
fi
}

ifupdown_setup (){
rm -f /etc/network/interfaces
if [[ "$DISTRO_VERSION" == "jammy" ]]; then
	# /etc/network/if-down.d/resolved: 12: mystatedir: not found
	# /etc/network/if-up.d/resolved: 12: mystatedir: not found
	if [[ -e "/etc/network/if-down.d/resolved" ]]; then
		sed -i 's/mystatedir statedir ifindex interface/#mystatedir statedir ifindex interface/g' /etc/network/if-down.d/resolved
		sed -i 's/return/exit 0/g' /etc/network/if-down.d/resolved
	fi
	if [[ -e "/etc/network/if-up.d/resolved" ]]; then
		sed -i 's/mystatedir statedir ifindex interface/#mystatedir statedir ifindex interface/g' /etc/network/if-up.d/resolved
		sed -i 's/return/exit 0/g' /etc/network/if-up.d/resolved
	fi
fi
# ifupdown interfaces and wpa_supplicant files
tee /etc/network/interfaces <<EOF
# Interfaces
source /etc/network/interfaces.d/*

# Loopback network interface
auto lo
iface lo inet loopback

# Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4
	
#allow-hotplug eth1
#iface eth1 inet dhcp
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4

#allow-hotplug eth2
#iface eth2 inet dhcp
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4

# Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

# Wireless
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
EOF

tee /etc/wpa_supplicant/wpa_supplicant.conf <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
	ssid="mywifissid"
	scan_ssid=1
	key_mgmt=WPA-PSK
	psk="wifipasskey"
}
EOF
}

networkmanager_setup (){
mkdir -p /etc/network
rm -f /etc/network/interfaces
tee /etc/network/interfaces <<EOF
source /etc/network/interfaces.d/*

auto lo
iface lo inet loopback
EOF
mkdir -p /etc/wpa_supplicant
echo "ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev" > /etc/wpa_supplicant/wpa_supplicant.conf
rm -f /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf
rm -f /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf
echo "[connection]" > /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf
echo "wifi.powersave = 2" >> /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf
}

ifupdown_credentials (){
if [[ -f "/root/ifupdown.credentials" ]]; then
	CURRENT_HOSTNAME=`cat /etc/hostname | sed -n '1p'`
	mv -f /root/ifupdown.credentials /usr/local/bin/credentials
	chmod +x /usr/local/bin/credentials
	chown root:root /usr/local/bin/credentials
	rm -f /root/networkmanager.credentials
	echo "# activate service" > /boot/credentials.txt
	echo 'ENABLE="false"' >> /boot/credentials.txt
	echo "" >> /boot/credentials.txt
	echo "# input wifi credentials" >> /boot/credentials.txt
	echo 'SSID=""' >> /boot/credentials.txt
	echo 'PASSKEY=""' >> /boot/credentials.txt
	echo 'COUNTRYCODE=""' >> /boot/credentials.txt
	echo "# set static ip address" >> /boot/credentials.txt
	echo 'MANUAL="false"' >> /boot/credentials.txt
	echo 'IPADDR=""' >> /boot/credentials.txt
	echo 'NETMASK=""' >> /boot/credentials.txt
	echo 'GATEWAY=""' >> /boot/credentials.txt
	echo 'NAMESERVERS=""' >> /boot/credentials.txt
	echo "" >> /boot/credentials.txt
	echo "# change hostname" >> /boot/credentials.txt
	echo HOSTNAME='"'$CURRENT_HOSTNAME'"' >> /boot/credentials.txt
fi
}

networkmanager_credentials (){
if [[ -f "/root/networkmanager.credentials" ]]; then
	CURRENT_HOSTNAME=`cat /etc/hostname | sed -n '1p'`
	mv -f /root/networkmanager.credentials /usr/local/bin/credentials
	chmod +x /usr/local/bin/credentials
	chown root:root /usr/local/bin/credentials
	rm -f /root/ifupdown.credentials
	echo "# activate service" > /boot/credentials.txt
	echo 'ENABLE="false"' >> /boot/credentials.txt
	echo "" >> /boot/credentials.txt
	echo "# input wifi credentials" >> /boot/credentials.txt
	echo 'SSID=""' >> /boot/credentials.txt
	echo 'PASSKEY=""' >> /boot/credentials.txt
	echo 'COUNTRYCODE=""' >> /boot/credentials.txt
	echo "# set static ip address" >> /boot/credentials.txt
	echo 'MANUAL="false"' >> /boot/credentials.txt
	echo 'IPADDR=""' >> /boot/credentials.txt
	echo 'GATEWAY=""' >> /boot/credentials.txt
	echo 'DNS=""' >> /boot/credentials.txt
	echo "" >> /boot/credentials.txt
	echo "# change hostname" >> /boot/credentials.txt
	echo HOSTNAME='"'$CURRENT_HOSTNAME'"' >> /boot/credentials.txt
fi
}
