#!/bin/bash

# ATF
arm_trusted_firmware (){
TAG="lts-v2.10.7"
if [[ "$FAMILY_EXT" =~ ^(sun50i|rk3328|rk3399)$ ]]; then
	atf_download; cd arm-trusted-firmware; atf_patching; echo ""
	if [ $CROSSCOMPILE -eq 1 ]; then
		echo -e "${GRN}  CC${FIN}"
		echo -e "  GCC     ${CROSS_COMPILE}${COMPILER}"
	else
		echo -e "${GRN}  NC${FIN}"
		echo -e "  GCC     ${COMPILER}"
	fi
	export ARCH=${ARCH}
	ubuild "${ATF_EXT}"
	cd ..
	if [[ -f "u-boot-${UBOOT_VERSION}.tar.gz" ]]; then echo ""; fi 
fi
}

atf_download (){
if [[ `wget -S --spider https://github.com/ARM-software/arm-trusted-firmware/blob/master/Makefile 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	if [[ -d "arm-trusted-firmware" ]] && [[ -d "arm-trusted-firmware.backup" ]]; then
		echo -en "${WHT}Trusted Firmware-A ${TAG}${FIN}"
		echo -en " ${PNK}[${FIN}${YLW}restoring${FIN}${PNK}]${FIN}"
		rm -fdr arm-trusted-firmware
		echo -en " ${WHT}...${FIN}"
		mv -f arm-trusted-firmware.backup arm-trusted-firmware
		cd arm-trusted-firmware
		#git config pull.rebase false
		#git config advice.detachedHead false
		git checkout ${TAG} &> /dev/null
		make realclean > /dev/null 2>&1
		cd ..
		cp -r arm-trusted-firmware arm-trusted-firmware.backup
		echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
	else
		if [[ -d "arm-trusted-firmware" ]]; then rm -fdr arm-trusted-firmware; fi
		echo -en "${WHT}Trusted Firmware-A ${TAG}${FIN}"
		echo -en " ${PNK}[${FIN}${WHT}cloning${FIN}${PNK}]${FIN}"
		git clone -q -c advice.detachedHead=false https://github.com/ARM-software/arm-trusted-firmware.git -b ${TAG}
		if [[ -d "arm-trusted-firmware" ]]; then
			cd arm-trusted-firmware
			make realclean > /dev/null 2>&1
			cd ..
			echo -en " ${PNK}[${FIN}${WHT}creating backup${FIN}${PNK}]${FIN}"
			cp -r arm-trusted-firmware arm-trusted-firmware.backup
			echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
		else
			echo -e " ${PNK}[${FIN}${RED}failed${FIN}${PNK}]${FIN}"
			exit 1
		fi
	fi
fi
}

# IMX ATF
imx_arm_trusted_firmware (){
BRANCH="lf_v2.8"
imx_atf_download; cd imx-arm-trusted-firmware; echo ""
if [ $CROSSCOMPILE -eq 1 ]; then
	echo -e "${GRN}  CC${FIN}"
	echo -e "  GCC     ${CROSS_COMPILE}${COMPILER}"
else
	echo -e "${GRN}  NC${FIN}"
	echo -e "  GCC     ${COMPILER}"
fi
export ARCH=${ARCH}
ubuild "${ATF_EXT}"
cd ..
if [[ -f "u-boot-${UBOOT_VERSION}.tar.gz" ]]; then echo ""; fi 
}

imx_atf_download (){
if [[ `wget -S --spider https://github.com/nxp-imx/imx-atf/blob/${BRANCH}/Makefile 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	if [[ -d "imx-arm-trusted-firmware" ]] && [[ -d "imx-arm-trusted-firmware.backup" ]]; then
		echo -en "${WHT}IMX Trusted Firmware-A${FIN}"
		echo -en " ${PNK}[${FIN}${YLW}restoring${FIN}${PNK}]${FIN}"
		rm -fdr imx-arm-trusted-firmware
		echo -en " ${WHT}...${FIN}"
		mv -f imx-arm-trusted-firmware.backup imx-arm-trusted-firmware
		cd imx-arm-trusted-firmware
		git checkout ${BRANCH} &> /dev/null
		make realclean > /dev/null 2>&1
		cd ..
		cp -r imx-arm-trusted-firmware imx-arm-trusted-firmware.backup
		echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
	else
		if [[ -d "imx-arm-trusted-firmware" ]]; then rm -fdr imx-arm-trusted-firmware; fi
		echo -en "${WHT}IMX Trusted Firmware-A${FIN}"
		echo -en " ${PNK}[${FIN}${WHT}cloning${FIN}${PNK}]${FIN}"
		git clone -q -c advice.detachedHead=false https://github.com/nxp-imx/imx-atf -b ${BRANCH} imx-arm-trusted-firmware
		if [[ -d "imx-arm-trusted-firmware" ]]; then
			cd imx-arm-trusted-firmware
			make realclean > /dev/null 2>&1
			cd ..
			echo -en " ${PNK}[${FIN}${WHT}creating backup${FIN}${PNK}]${FIN}"
			cp -r imx-arm-trusted-firmware imx-arm-trusted-firmware.backup
			echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
		else
			echo -e " ${PNK}[${FIN}${RED}failed${FIN}${PNK}]${FIN}"
			exit 1
		fi
	fi
fi
}

report_atf_error (){
echo "Missing ${ATF_PLAT} bl31 blob. Please report build errors."
echo ""
exit 1
}
