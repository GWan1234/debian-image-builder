#!/bin/bash

# compression
COMPRESSION="xz"

# linux packaging
linux_packaging (){
# debian package name
if [[ "$COMMON_PKG" == "true" ]]; then
	LINUX_IMAGE="linux-image-${COMMON_PKGNAME}"
	LINUX_HEADERS="linux-headers-${COMMON_PKGNAME}"
else
	LINUX_IMAGE="linux-image-${SERIES}"
	LINUX_HEADERS="linux-headers-${SERIES}"
fi
# kernel image
if [[ "$ARCH" == "arm" ]]; then KIMAGE="zImage"; fi
if [[ "$ARCH" == "arm64" ]]; then KIMAGE="Image"; fi
if [[ "$ARCH" == "riscv" ]]; then KIMAGE="Image.itb"; fi
# install target
if [[ "$ARCH" == "arm" ]]; then LINUX_PATH="usr/lib/${LINUX_IMAGE}"; fi
if [[ "$ARCH" =~ ^(arm64|riscv)$ ]]; then LINUX_PATH="usr/lib/${LINUX_IMAGE}/${PLATFORM}"; fi
INSTALL_PATH="boot/${PLATFORM}"
# create packaging variables
echo "# packaging variables" > "scripts/package/pkgvars"
echo karch='"'$ARCH'"' >> "scripts/package/pkgvars"
echo kimage='"'$KIMAGE'"' >> "scripts/package/pkgvars"
echo platform='"'$PLATFORM'"' >> "scripts/package/pkgvars"
echo series_name='"'$SERIES'"' >> "scripts/package/pkgvars"
echo linux_name='"'$LINUX_IMAGE'"' >> "scripts/package/pkgvars"
echo headers_name='"'$LINUX_HEADERS'"' >> "scripts/package/pkgvars"
echo linux_path='"'$LINUX_PATH'"' >> "scripts/package/pkgvars"
echo boot_path='"'$INSTALL_PATH'"' >> "scripts/package/pkgvars"
echo "# packaging compression" >> "scripts/package/pkgvars"
echo compression='"'$COMPRESSION'"' >> "scripts/package/pkgvars"
}

# u-boot packaging
uboot_packaging (){
PKGNAME="u-boot-${SERIES}-${BOARD}"
PKGVERSION=`echo $UBOOT_VERSION | sed 's/v//g'`
BV="${BUILD_VERSION}"
mkdir -p ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN
mkdir -p ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
${PLATFORM}_uboot_packaging
cp -f ../../packaging/flash.sh ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
chmod +x ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/flash.sh
if [[ "$FAMILY_EXT" == "ac2xx" ]]; then
	cp -f ../../packaging/flash-recovery.sh ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
	chmod +x ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/flash-recovery.sh
fi

# control file
if [[ -d "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN" ]]; then
	echo "Package: ${PKGNAME}" > "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
	echo "Version: ${PKGVERSION}-${BV}" >> "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
	echo "Architecture: ${ARCH_EXT}" >> "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
	echo "Maintainer: ${KBUSER} <${KBUSER}@${KBHOST}.com>" >> "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
	echo "Description: Das U-Boot ${SERIES} for the ${DEFAULT_MOTD}" >> "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
fi

# preinst script
if [[ -d "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN" ]]; then
	cat <<EOF > "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/preinst"
#!/bin/bash
set -e

# clean
rm -fdr /usr/lib/u-boot
if [ -d /usr/lib/${PKGNAME} ]; then
	rm -fr /usr/lib/${PKGNAME}/*
fi

exit 0
EOF
	chmod 755 "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/preinst"
fi

# postinst script
if [[ -d "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN" ]]; then
	cat <<EOF > "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/postinst"
#!/bin/bash
set -e

# symlink
if [ -d /usr/lib/${PKGNAME} ]; then
	ln -s /usr/lib/${PKGNAME} /usr/lib/u-boot
fi

# broadcom
if [ -d /boot/broadcom ]; then
	if [ -f /usr/lib/${PKGNAME}/u-boot.bin ]; then
		rm -f /boot/broadcom/u-boot.bin
		cp -fr /usr/lib/${PKGNAME}/u-boot.bin /boot/broadcom/
	fi
fi

exit 0
EOF
	chmod 755 "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/postinst"
fi

# build deb package
dpkg-deb -Z${COMPRESSION} --build --root-owner-group ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}
if [[ -f "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}.deb" ]]; then
	if [[ `ls ../../${OUTPUT}/${PKGNAME}_*.deb` ]] > /dev/null 2>&1; then
		mkdir -p ../../${OUTPUT}/tmp
		mv -f ../../${OUTPUT}/${PKGNAME}_*.deb ../../${OUTPUT}/tmp/
	fi
	mv -f "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}.deb" ../../${OUTPUT}/
fi
}

# u-boot precompiled packaging
uboot_precompiled_packaging (){
PKGNAME="u-boot-${SERIES}-${BOARD}"
BV="${BUILD_VERSION}"
mkdir -p ${OUTPUT}/
echo -e "Using precompiled binaries."
# add binary(ies) to output directory
if [[ "$BOARD" == "ft20" ]]; then cp -f ${PRECOMPILED_UBOOT_DIR}/u-boot.bin ${OUTPUT}/; fi
if [[ "$BOARD" == "lepotato" || "$BOARD" == "odroidn2l" ]]; then
	if [[ -f "${PRECOMPILED_UBOOT_DIR}/u-boot.bin" ]]; then cp -f ${PRECOMPILED_UBOOT_DIR}/u-boot.bin ${OUTPUT}/; fi
	if [[ -f "${PRECOMPILED_UBOOT_DIR}/u-boot.bin.sd.bin" ]]; then cp -f ${PRECOMPILED_UBOOT_DIR}/u-boot.bin.sd.bin ${OUTPUT}/; fi
fi
if [[ "$BOARD" == "odroidc1" ]]; then
	cp -f ${PRECOMPILED_UBOOT_DIR}/bl1.bin ${OUTPUT}/
	cp -f ${PRECOMPILED_UBOOT_DIR}/u-boot.bin ${OUTPUT}/
fi
if [[ "$BOARD" == "orangepi3lts" ]]; then
	cp -f ${PRECOMPILED_UBOOT_DIR}/u-boot-sunxi-with-spl.bin ${OUTPUT}/
fi
if [[ "$BOARD" =~ ^(indiedroid-nova|khadasedge2|orangepi5|orangepi5plus|radxae25|rock5b)$ ]]; then
	cp -f ${PRECOMPILED_UBOOT_DIR}/idbloader.bin ${OUTPUT}/
	cp -f ${PRECOMPILED_UBOOT_DIR}/u-boot.itb ${OUTPUT}/
fi
cd ${OUTPUT}/
if [[ -d "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}" ]]; then rm -fdr "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}"; fi
if [[ -f "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}.deb" ]]; then rm -f "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}.deb"; fi
mkdir -p ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN
mkdir -p ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
# add binary(ies) to deb package
if [[ "$BOARD" == "ft20" ]]; then cp -f u-boot.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/; fi
if [[ "$BOARD" == "lepotato" || "$BOARD" == "odroidn2l" ]]; then
	if [[ -f "u-boot.bin" ]]; then cp -f u-boot.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/; fi
	if [[ -f "u-boot.bin.sd.bin" ]]; then cp -f u-boot.bin.sd.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/; fi
fi
if [[ "$BOARD" == "odroidc1" ]]; then
	cp -f bl1.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
	cp -f u-boot.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
fi
if [[ "$BOARD" == "orangepi3lts" ]]; then
	cp -f u-boot-sunxi-with-spl.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
fi
if [[ "$BOARD" =~ ^(indiedroid-nova|khadasedge2|orangepi5|orangepi5plus|radxae25|rock5b)$ ]]; then
	cp -f idbloader.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
	cp -f u-boot.itb ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
fi
cp -f ../../packaging/flash.sh ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
chmod +x ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/flash.sh
# control file
if [[ -d "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN" ]]; then
	echo "Package: ${PKGNAME}" > "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
	echo "Version: ${PKGVERSION}-${BV}" >> "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
	echo "Architecture: ${ARCH_EXT}" >> "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
	echo "Maintainer: ${KBUSER} <${KBUSER}@${KBHOST}.com>" >> "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
	echo "Description: Das U-Boot ${SERIES} for the ${DEFAULT_MOTD}" >> "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/control"
fi

# preinst script
if [[ -d "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN" ]]; then
	cat <<EOF > "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/preinst"
#!/bin/bash
set -e

# clean
rm -fdr /usr/lib/u-boot
if [ -d /usr/lib/${PKGNAME} ]; then
	rm -fr /usr/lib/${PKGNAME}/*
fi

exit 0
EOF
	chmod 755 "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/preinst"
fi

# postinst script
if [[ -d "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN" ]]; then
	cat <<EOF > "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/postinst"
#!/bin/bash
set -e

# symlink
if [ -d /usr/lib/${PKGNAME} ]; then
	ln -s /usr/lib/${PKGNAME} /usr/lib/u-boot
fi

exit 0
EOF
	chmod 755 "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/DEBIAN/postinst"
fi

# build deb package
if [[ `ls ${PKGNAME}_*.deb` ]] > /dev/null 2>&1; then
	mkdir -p tmp/
	mv -f ${PKGNAME}_*.deb tmp/
fi
dpkg-deb -Z${COMPRESSION} --build --root-owner-group ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}
if [[ -f "${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}.deb" ]]; then
	rm -fdr ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}
	if [[ -f "u-boot.itb" ]]; then
		# if found list image tree blob
		ls -ls u-boot.itb
	fi
	ls -ls {*.bin,${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}.deb};
fi
}
